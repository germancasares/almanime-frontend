name: On new release
on: 
  workflow_dispatch:
    inputs:
      nextRelease:
        description: 'Next Release'     
        required: true
        default: 'patch'
        type: choice
        options: 
        - major
        - minor
        - patch
        - prerelease
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  on-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install cosign
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Install latest arm64 builder
        id: update-arm64-builder
        run: docker run --privileged --rm tonistiigi/binfmt --install arm64
      - name: Automated Version Bump
        uses: phips28/gh-action-bump-version@v11
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version-type: ${{ inputs.nextRelease }}
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            REACT_APP_API=${{ secrets.REACT_APP_API }}
            REACT_APP_SENTRY_DSN=${{ secrets.REACT_APP_SENTRY_DSN }}
            REACT_APP_RELEASE=${{ github.ref_name }}
            REACT_APP_AUTH0_DOMAIN=${{ secrets.REACT_APP_AUTH0_DOMAIN }}
            REACT_APP_AUTH0_AUDIENCE=${{ secrets.REACT_APP_AUTH0_AUDIENCE }}
            REACT_APP_AUTH0_CLIENT_ID=${{ secrets.REACT_APP_AUTH0_CLIENT_ID }}
      - name: Sign the published Docker image
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
      - name: Create Github release
        uses: softprops/action-gh-release@v2
      - name: Tailscale
        uses: tailscale/github-action@7a0b30ed3517c2244d1330e39467b95f067a33bd
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
      - name: Trigger Portainer webhook
        uses: joelwmale/webhook-action@448a17bf857ead98546cfbdbe3b9d4cf979dda95
        with:
          url: ${{ secrets.WEBHOOK_URL }}